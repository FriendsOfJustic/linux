<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sys.mapper.SusAlgorithmMapper">


    <delete id="deleteAll">
        drop table if exists myrast;
        drop table  if exists   chain_sus_reclass ;
    </delete>


    <select id="selectMidResultCount" resultType="java.lang.Integer">
        select count(rast) from myrast;
    </select>

    <select id="selectReclassCount" resultType="java.lang.Integer">
        select count(rast) from chain_sus_reclass;
    </select>
    
    <insert id="insertMidResult">
        drop table if exists myrast;
        create table myrast ( id serial primary key, rast raster);
        insert into myrast(rast) select rast from chain_sus_dem;
        CREATE TEMP TABLE temp_slope AS
        SELECT ST_Slope(rast) AS slope
        FROM chain_sus_dem;
        insert into myrast(rast) select slope from temp_slope;
        drop table  if exists temp_slope;
        CREATE TEMP TABLE temp_aspect AS
        SELECT  ST_Aspect(rast) AS aspect
        FROM chain_sus_dem;
        insert into myrast(rast) select aspect from temp_aspect;
        drop table  if exists temp_aspect;
        CREATE TEMP TABLE temp_aspect_aspect AS
        SELECT  st_aspect(rast) AS aspect_aspect
        FROM myrast where id =3;
        insert into myrast(rast) select aspect_aspect from temp_aspect_aspect;
        drop table  if exists temp_aspect_aspect;




        insert into myrast(rast) select rast from chain_sus_water;
-- 对chain_sus_rain进行重采样并插入myrast
        insert into myrast(rast)
        select st_resample(newtif.rast,scalex,scaley,upperleftx,upperlefty,skewx,skewy) as rast
        from (select rast , (st_metadata(rast)).scalex  ,
             (st_metadata(rast)).skewy ,
             (st_metadata(rast)).scaley ,
             (st_metadata(rast)).skewx,
             (st_metadata(rast)).upperleftx,
             (st_metadata(rast)).upperlefty
              from chain_sus_dem ) as tmpdem,(select rast from chain_sus_rain) as newtif;

-- 对chain_sus_rock进行重采样并插入myrast
        insert into myrast(rast)
        select st_resample(newtif.rast,scalex,scaley,upperleftx,upperlefty,skewx,skewy) as rast
        from (select rast , (st_metadata(rast)).scalex  ,
             (st_metadata(rast)).skewy ,
             (st_metadata(rast)).scaley ,
             (st_metadata(rast)).skewx,
             (st_metadata(rast)).upperleftx,
             (st_metadata(rast)).upperlefty
              from chain_sus_dem ) as tmpdem,(select rast from chain_sus_rock) as newtif;
    </insert>
    
    
    <select id="selectMax" resultType="java.lang.Double">
        select (st_summarystats(rast)).max
        from myrast
        where  id=#{num};
    </select>

    <select id="selectMin" resultType="java.lang.Double">
        select (st_summarystats(rast)).min
        from myrast
        where  id=#{num};
    </select>
    
    <insert id="insertReclass">
        create table if not exists chain_Sus_reclass ( id serial primary key, rast raster);
        CREATE TEMP TABLE  tmp_reclass_dem AS
        select st_reclass(rast,1,#{exp},'8BUI',0) as rast
        from myrast
        where id=#{num};
        insert into chain_Sus_reclass(rast) select rast from tmp_reclass_dem;
        drop table  if exists   tmp_reclass_dem ;
    </insert>
    <select id="selectRiskPointCountPerClass" resultType="java.lang.Integer">
        select st_value(rast,geom ) from (select rast from chain_sus_reclass where  id =#{id}) as t1,(select geom from chainriskpoint) as t2;
    </select>

<!--    <select id="selectRiskPoint_x" resultType="java.lang.Double">-->
<!--        select x from chainriskpoint;-->
<!--    </select>-->
<!--    <select id="selectRiskPoint_y" resultType="java.lang.Double">-->
<!--        select y from chainriskpoint;-->
<!--    </select>-->


    <insert id="insertRedefine">
        CREATE TEMP TABLE  tmp_redefine AS
        select st_reclass(rast,1,#{exp},'16BSI',0) as rast
        from chain_sus_reclass
        where id=#{num};
        insert into chain_Sus_reclass(rast) select rast from tmp_redefine;
        drop table  if exists   tmp_redefine;
    </insert>


    <select id="selectClass"  resultType="java.lang.Integer">
        select count(*)
        from (select st_value(rast,cast(x as Integer),cast(y as Integer),exclude_nodata_value := true) as val
              from chain_sus_reclass , (select ceil(x) as x ,ceil(y) as y from chainriskpoint) as point
              where id=#{num} ) as tmp
        where val=#{val};
    </select>

    <select id="selectRiskPointCount" resultType="java.lang.Integer">
        select count(*) from chainriskpoint;
    </select>

    <select id="selectTifEachBandCount" resultType="java.lang.Integer">
        select (st_valuecount(rast)).count
        from chain_sus_reclass
        where id=#{num};
    </select>

    <select id="selectTifEachBandValue" resultType="java.lang.Integer">
        select (st_valuecount(rast)).value
        from chain_sus_reclass
        where id=#{num};
    </select>


    <select id="selectAllCount" resultType="java.lang.Integer">
        select (st_summarystats(rast)).count
        from chain_sus_reclass
        where id=#{num};
    </select>


    <insert id="selectResultTif">
        drop table if exists  pg_temp.tmp_result;

        create temp table tmp_result as
  (with rast1 as (select rast from chain_sus_reclass where id =8),
         rast2 as (select rast from chain_sus_reclass where id=9)
        select st_mapalgebra(rast1.rast,1,rast2.rast,1,'[rast1.val] + [rast2.val]') as rast
        from rast1,rast2);


        update tmp_result  set rast =
                                   (with rast1 as (select rast from pg_temp.tmp_result),
                                         rast2 as (select rast from chain_sus_reclass where id=10)
                                    select st_mapalgebra(rast1.rast,1,rast2.rast,1,'[rast1.val] + [rast2.val]') as rast
                                    from rast1,rast2);

        update tmp_result  set rast =
                                   ( with rast1 as (select rast from pg_temp.tmp_result),
                                          rast2 as (select rast from chain_sus_reclass where id=11)
                                     select st_mapalgebra(rast1.rast,1,rast2.rast,1,'[rast1.val] + [rast2.val]') as rast
                                     from rast1,rast2);

        update tmp_result  set rast =
                                   (with rast1 as (select rast from pg_temp.tmp_result),
                                         rast2 as (select rast  from chain_sus_reclass where id=12)
                                    select st_mapalgebra(rast1.rast,1,rast2.rast,1,'[rast1.val] + [rast2.val]') as rast
                                    from rast1,rast2);

        update tmp_result  set rast =
                                   (with rast1 as (select rast from pg_temp.tmp_result),
                                         rast2 as (select rast   from chain_sus_reclass where id=13)
                                    select st_mapalgebra(rast1.rast,1,rast2.rast,1,'[rast1.val] + [rast2.val]') as rast
                                    from rast1,rast2);

        update tmp_result  set rast =
                                   (with rast1 as (select rast from pg_temp.tmp_result),
                                         rast2 as (select rast   from chain_sus_reclass where id=14)
                                    select st_mapalgebra(rast1.rast,1,rast2.rast,1,'[rast1.val] + [rast2.val]') as rast
                                    from rast1,rast2);

        insert into chain_sus_reclass(rast) select rast from pg_temp.tmp_result;
    </insert>


    <select id="selectResultImage" resultType="com.example.sys.entity.ResultTif">
        select st_astiff(rast) as tif
        from chain_sus_reclass
        where  id =#{id};
    </select>

</mapper>