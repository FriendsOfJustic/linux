<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rsgisai.geohazard.computation.geospatial.dao.pgsql.BuiltInOperatorDao">

    <insert id="prepareRaster" useGeneratedKeys="true" keyProperty="id">
        insert into public.intermediate_raster(working_area_id,
                                               feature,
                                               rast,
                                               algorithm,
                                               algorithm_args,
                                               create_by,
                                               modify_by)

        select working_area_id,
               feature,
               rast,
               'DZ_OriginRaster',
               #{feature},
               #{userId},
               #{userId}
        from public.origin_raster
        where working_area_id = #{workingAreaId}
          and feature = #{feature};
    </insert>

    <insert id="preparePoints" useGeneratedKeys="true" keyProperty="id">
        insert into public.intermediate_points(working_area_id,
                                               feature,
                                               points,
                                               create_by,
                                               modify_by)
        select #{workingAreaId},
               #{feature},
               ST_Collect(gp.geom),
               #{userId},
               #{userId}
        from public.${feature} gp,
             public.working_area wa
        where wa.id = #{workingAreaId}
          and ST_Contains(wa.geom, gp.geom);
        ;
    </insert>

    <insert id="calculateSlope" useGeneratedKeys="true" keyProperty="id">
        insert into public.intermediate_raster(working_area_id,
                                               feature,
                                               rast,
                                               algorithm,
                                               algorithm_args,
                                               create_by,
                                               modify_by)
        select #{workingAreaId},
               'slope',
               ST_Slope(
                       rast := rast,
                       nband := 1,
                       pixeltype := '32BF',
                       units := 'DEGREES',
                       scale :=
                               111120, -- for Meters:LatLon use scale=111120 reference: https://postgis.net/docs/RT_ST_Slope.html
                       interpolate_nodata := FALSE
                   ),
               'DZ_Slope',
               null, -- this algorithm need no argument
               #{userId},
               #{userId}
        from public.intermediate_raster
        where id = #{inputRasterId}
          and feature = 'dem' -- just to be sure
          and working_area_id = #{workingAreaId} -- working_area_id 只是为了万无一失，非必须
        ;
    </insert>

    <insert id="calculateAspect" useGeneratedKeys="true" keyProperty="id">
        insert into public.intermediate_raster(working_area_id,
                                               feature,
                                               rast,
                                               algorithm,
                                               algorithm_args,
                                               create_by,
                                               modify_by)
        select #{workingAreaId},
               'aspect',
               ST_Aspect(
                       rast := rast,
                       nband := 1,
                       pixeltype := '32BF',
                       units := 'DEGREES',
                       interpolate_nodata := FALSE
                   ),
               'DZ_Aspect',
               null, -- this algorithm need no argument
               #{userId},
               #{userId}
        from public.intermediate_raster
        where id = #{inputRasterId}
          and feature = 'dem' -- just to be sure
          and working_area_id = #{workingAreaId} -- working_area_id 只是为了万无一失，非必须
        ;
    </insert>

    <insert id="reclassify" useGeneratedKeys="true" keyProperty="id">
        insert into public.intermediate_raster(working_area_id,
                                               feature,
                                               rast,
                                               algorithm,
                                               algorithm_args,
                                               create_by,
                                               modify_by)
        select #{workingAreaId},
               #{feature},
               ST_Reclass(
                       rast,
                       1,
                       #{reclassifyExpression},
                       '8BUI',
                       0 -- no data value set to zero
                   ),
               #{algorithm},
               #{numberClasses}::text, #{userId},
               #{userId}
        from public.intermediate_raster
        where id = #{inputRasterId};
    </insert>
    <insert id="saveRaster" useGeneratedKeys="true" keyProperty="id">
        insert into public.result_raster
        (working_area_id,
         feature,
         algorithm,
         algorithm_args,
         rast,
         create_by,
         modify_by)
        select #{workingAreaId},
               #{feature},
               #{algorithm},
               #{algorithmArgs},
               rast,
               #{userId},
               #{userId}
        from public.intermediate_raster
        where id = #{inputRasterId};
    </insert>
    <insert id="singleMapAlgebra" useGeneratedKeys="true" keyProperty="id">
        insert into intermediate_raster(working_area_id,
                                        feature,
                                        algorithm,
                                        rast,
                                        create_by, modify_by)
        select #{workingAreaId},
               #{feature},
               #{algorithm},
               ST_MapAlgebra(
                       rast,
                       1,
                       '32BF',
                       #{mapAlgebraExpression}
                   ),
               #{userId},
               #{userId}
        from intermediate_raster
        where id = #{inputRasterId};
    </insert>
    <insert id="weightSum" useGeneratedKeys="true" keyProperty="id">
        insert into public.intermediate_raster
        (working_area_id,
         feature,
         rast,
         algorithm,
         create_by,
         modify_by)
        select #{workingAreaId},
               #{feature},
               ST_MapAlgebra(
                       a.rast,
                       ST_Resample(b.rast, a.rast),
                       #{mapAlgebraExpression},
                       '32BF'),
               #{algorithm},
               #{userId},
               #{userId}
        from public.intermediate_raster a,
             public.intermediate_raster b
        where a.id = #{inputRasterId}
          and b.id = #{inputRasterId2}
    </insert>
    <insert id="prepareResultRaster" useGeneratedKeys="true" keyProperty="id">
        insert into public.intermediate_raster(working_area_id,
                                               feature,
                                               rast,
                                               algorithm,
                                               algorithm_args,
                                               create_by,
                                               modify_by)
        select working_area_id,
               feature,
               rast,
               'DZ_ResultRaster',
               #{feature},
               #{userId},
               #{userId}
        from public.result_raster
        where working_area_id = #{workingAreaId}
          and feature = #{feature}
        order by modify_time desc
        limit 1
        ;
    </insert>

    <select id="queryStats" resultType="com.rsgisai.geohazard.computation.geospatial.entity.RasterStats">
        select (ST_SummaryStats(rast)).*
        from public.intermediate_raster
        where id = #{rasterId}; -- slope [0, 90]
    </select>
    <select id="entropy" resultType="java.lang.Long">
        select 1000000 * (ST_SummaryStats(
                    ST_MapAlgebra(
                            rast,
                            1,
                            '32BF',
                            #{mapAlgebraExpression}
                        )
                )).sum as entropy
        from intermediate_raster
        where id = #{inputRasterId};
    </select>

    <update id="overlap">
        update geohazard_potential gp
        set risk_level = ST_Value(rr.rast, gp.geom)
        from geohazard_potential gp,
     result_raster rr
        where gp.working_area_id = #{workingAreaId}
          and rr.working_area_id = #{workingAreaId}
          and rr.feature = 'geohazard_risk'
          and ST_Value(rr.rast
            , gp.geom)
    </update>
</mapper>
